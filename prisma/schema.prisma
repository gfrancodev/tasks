generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int      @id @default(autoincrement())
  uuid      Bytes    @unique @default(dbgenerated("UUID_TO_BIN(UUID())")) @db.Binary(16) @map("uuid")
  name      String   @unique @map("name")
  users     User[]   @relation("company_users")
  tasks     Task[]   @relation("company_tasks")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("companies")
}

model User {
  id         Int      @id @default(autoincrement()) @map("id")
  uuid       Bytes    @unique @default(dbgenerated("UUID_TO_BIN(UUID())")) @db.Binary(16) @map("uuid")
  email      String   @unique @map("email")
  fullName      String   @unique @map("full_name")
  password   String   @map("password")
  role       Role     @default(USER) @map("role")
  companyId  Int      @map("company_id")
  company    Company  @relation("company_users", fields: [companyId], references: [id])
  tasks      Task[]   @relation("user_tasks")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Task {
  id           Int        @id @default(autoincrement()) @map("id")
  uuid         Bytes      @unique @default(dbgenerated("UUID_TO_BIN(UUID())")) @db.Binary(16) @map("uuid")
  title        String     @map("title")
  description  String?    @map("description")
  status       TaskStatus @default(PENDING) @map("status")
  dueDate      DateTime   @map("due_date")
  companyId    Int        @map("company_id")
  company      Company    @relation("company_tasks", fields: [companyId], references: [id])
  assignedToId Int?       @map("assigned_to_id")
  assignedTo   User?      @relation("user_tasks", fields: [assignedToId], references: [id])
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")

  @@map("tasks")
}

enum Role {
  ADMIN @map("ADMIN")
  USER  @map("USER")
}

enum TaskStatus {
  PENDING     @map("PENDING")
  IN_PROGRESS @map("IN_PROGRESS")
  COMPLETED   @map("COMPLETED")
}
